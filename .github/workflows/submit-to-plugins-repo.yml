name: Submit Plugin to MusicBrainz Picard Plugins Repository

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.2.1)'
        required: true
        type: string
      release_notes:
        description: 'Release notes/description'
        required: false
        type: string

jobs:
  create-plugin-pr:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.release_tag }}
          path: plugin-source
      
      - name: Set up Git and GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.PICARD_PLUGINS_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Authenticate GitHub CLI (more secure than storing credentials in a file)
          echo "${GH_TOKEN}" | gh auth login --with-token
      
      - name: Clone MusicBrainz Picard Plugins repository (fork)
        run: |
          # Clone the fork using gh cli (handles authentication securely)
          if gh repo clone ${{ github.repository_owner }}/picard-plugins picard-plugins 2>&1; then
            echo "Cloned fork successfully"
          else
            echo "Fork not found. Please fork https://github.com/musicbrainz/picard-plugins first."
            echo "You can create a fork at: https://github.com/musicbrainz/picard-plugins/fork"
            exit 1
          fi
          
          cd picard-plugins
          
          # Add upstream remote
          git remote add upstream https://github.com/musicbrainz/picard-plugins.git
          
          # Fetch latest from upstream
          git fetch upstream
      
      - name: Create branch for plugin update
        run: |
          cd picard-plugins
          BRANCH_NAME="shelves-plugin-${{ inputs.release_tag }}"
          
          # Base on upstream main (fail if not available)
          if ! git checkout -b "$BRANCH_NAME" upstream/main; then
            echo "Error: Failed to create branch from upstream/main"
            echo "Please ensure your fork is up to date with upstream"
            exit 1
          fi
      
      - name: Copy plugin files to target repository
        run: |
          # Create or update the shelves plugin directory
          mkdir -p picard-plugins/plugins/shelves
          
          # Copy the plugin files
          cp -r plugin-source/shelves/* picard-plugins/plugins/shelves/
          
          # Copy metadata files if they exist
          if [ -f plugin-source/README.md ]; then
            cp plugin-source/README.md picard-plugins/plugins/shelves/
          fi
          
          if [ -f plugin-source/CHANGELOG.md ]; then
            cp plugin-source/CHANGELOG.md picard-plugins/plugins/shelves/
          fi
      
      - name: Commit and push changes
        run: |
          cd picard-plugins
          BRANCH_NAME="shelves-plugin-${{ inputs.release_tag }}"
          
          git add plugins/shelves
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit - plugin version may already be up to date"
            exit 1
          fi
          
          git commit -m "Add/Update Shelves plugin ${{ inputs.release_tag }}"
          
          # Push to fork (authenticated via GitHub CLI)
          git push origin "$BRANCH_NAME"
      
      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.PICARD_PLUGINS_PAT }}
          RELEASE_TAG: ${{ inputs.release_tag }}
          RELEASE_NOTES: ${{ inputs.release_notes }}
          REPO_OWNER: ${{ github.repository_owner }}
          PLUGIN_REPO: ${{ github.repository }}
        run: |
          cd picard-plugins
          BRANCH_NAME="shelves-plugin-${RELEASE_TAG}"
          
          # Create PR body using a unique delimiter to handle special characters in release notes
          cat > pr_body.md << 'END_OF_PR_BODY'
          ## Shelves Plugin ${RELEASE_TAG}
          
          This PR adds/updates the Shelves plugin to version ${RELEASE_TAG}.
          
          ### Plugin Information
          - **Name**: Shelves
          - **Version**: ${RELEASE_TAG}
          - **Author**: ${REPO_OWNER}
          - **Repository**: https://github.com/${PLUGIN_REPO}
          
          ### Release Notes
          ${RELEASE_NOTES}
          
          ### Description
          The **Shelves** plugin adds virtual shelf management to MusicBrainz Picard, allowing music files to be organized by top-level folders.
          
          ---
          *This PR was automatically created by the Shelves plugin GitHub Action workflow.*
          END_OF_PR_BODY
          
          # Replace variables in the PR body
          sed -i "s/\${RELEASE_TAG}/${RELEASE_TAG}/g" pr_body.md
          sed -i "s/\${REPO_OWNER}/${REPO_OWNER}/g" pr_body.md
          sed -i "s|\${PLUGIN_REPO}|${PLUGIN_REPO}|g" pr_body.md
          sed -i "s/\${RELEASE_NOTES}/${RELEASE_NOTES}/g" pr_body.md
          
          # Create pull request using GitHub CLI (without labels to avoid errors if label doesn't exist)
          gh pr create \
            --repo musicbrainz/picard-plugins \
            --head "${REPO_OWNER}:${BRANCH_NAME}" \
            --title "Add/Update Shelves plugin ${RELEASE_TAG}" \
            --body-file pr_body.md
