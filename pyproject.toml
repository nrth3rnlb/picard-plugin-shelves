[project]
name = "picard-plugin-shelves"
dynamic = ["version"]
description = "Shelves Plugin for MusicBrainz Picard"
authors = [
    {name = "nrth3rnlb"}
]
requires-python = ">=3.8"
dependencies = [
    "PyQt5>=5.15.0",
    "PyYAML>=6.0",
    "fasteners~=0.14",
    "Markdown~=3.2",
    "mutagen~=1.37",
    "PyJWT~=2.0",
    "python-dateutil~=2.7",
    "python_libdiscid~=2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "mypy>=1.3.0",
    "setuptools>=64",
    "setuptools_scm>=8"
]

[build-system]
requires = ["setuptools>=62", "setuptools_scm>=8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.setuptools.packages.find]
include = ["shelves*"]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["shelves/tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["shelves"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/ui_*.py",
    "*_ui.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod"
]

[tool.mypy]
exclude = [
    "ui_.*\\.py$",
    ".*_ui\\.py$"
]
ignore_missing_imports = true
warn_unused_ignores = false

[tool.ruff]
exclude = [
    "ui_*.py",
    "*_ui.py",
    "__pycache__",
    ".git",
    ".venv",
    "venv"
]

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E501"]  # Line too long

[tool.pylint.main]
ignore-patterns = ["ui_.*\\.py", ".*_ui\\.py"]